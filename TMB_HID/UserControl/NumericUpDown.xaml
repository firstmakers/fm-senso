<UserControl x:Class="TMB.NumericUpDown"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:TMB"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
             mc:Ignorable="d" Height="16" Width="60">
    <UserControl.Resources>
        <c:Validacion x:Key="ods"/>

        <ControlTemplate x:Key="validationTemplate">
            <!--DockPanel>
                <Border Background="Red" DockPanel.Dock="right" Margin="3,0,0,0" Width="25" Height="25" CornerRadius="13">
                    <TextBlock Text="!" VerticalAlignment="center"  HorizontalAlignment="center" FontWeight="Bold" Foreground="white"/>
                </Border>
                <AdornedElementPlaceholder/>
            </-->
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="ToolTip"
                     Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        </Style>
    </UserControl.Resources>

    <Grid Margin="0,0,0,0">
        <TextBox x:Name="TextMuestras"  TextAlignment="Right" Padding="0" TextWrapping="Wrap" FontFamily="/TMB_HID;component/Fonts/#DS-Digital" FontSize="12" BorderBrush="#FF9E9E9E" MaxLength="5" MaxLines="1" BorderThickness="1" HorizontalAlignment="Left" Width="50"
            Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" TextChanged="InputValidation_TextChanged" LostFocus="LostFocus">
            <Binding Path="Muestras" Source="{StaticResource ods}"
                                 UpdateSourceTrigger="PropertyChanged" >
                <Binding.ValidationRules>
                    <c:RangeRule Max="10000" Min="1"/>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <StackPanel Margin="49,0,0,0" RenderTransformOrigin="0.5,0.5">
            <RepeatButton x:Name="Up" Click="Up_Click" BorderBrush="#FF151515" Height="8" Background="#FF232121" Margin="2,0,0,0" Style="{DynamicResource RepeatButtonStyle}">
                <ed:RegularPolygon Fill="#FFD1CDCD" Height="4.167" InnerRadius="1" PointCount="3" Stretch="Fill" Width="5.166"/>
            </RepeatButton>
            <RepeatButton x:Name="Down" Click="Down_Click" BorderBrush="#FF151515" Height="8" Background="#FF232121" Margin="2,0,0,0" Style="{DynamicResource RepeatButtonStyle}">
                <ed:RegularPolygon Fill="#FFD1CDCD" Height="4.167" InnerRadius="1" PointCount="3" Stretch="Fill" Width="5.166" RenderTransformOrigin="0.5,0.5">
                    <ed:RegularPolygon.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="180"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </ed:RegularPolygon.RenderTransform>
                </ed:RegularPolygon>
            </RepeatButton>
        </StackPanel>

    </Grid>
</UserControl>
